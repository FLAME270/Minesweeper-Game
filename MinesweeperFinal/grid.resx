<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ACQAAAAAAAAAAQAAACoAAAD/AAAArgAAAAAAAACjAAAA/wAAAMMAAADYAAAA/wAAAEUAAAC+AAAA/wAA
        ADAAAAABAAAABAAAAAAAAABXAAAA8AAAAP8AAAA5AAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAlgAA
        AG0AAAAAAAAAAAAAAAUAAAAAAAAAEQAAAPwAAADIAAAAIgAAAPgAAAD/AAAAMgAAADMAAAD/AAAA8QAA
        APAAAAD/AAAALwAAAAAAAAADAAAABAAAAAAAAAArAAAA3QAAAHMAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAQAAAARAAAAAAAAAAIAAAACAAAAAAAAAAAAAAACAAAA4QAAAOcAAACtAAAA/wAAAL8AAAABAAAAAAAA
        AHsAAAD/AAAA/QAAAP8AAAAtAAAAAAAAAAIAAAAAAAAABAAAAAAAAAAYAAAARQAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC9AAAA/wAAAP4AAAD/AAAARgAA
        AAAAAAAGAAAAAAAAALMAAAD/AAAA/AAAACoAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJ4AAAD/AAAA/gAA
        AMcAAAAAAAAAAgAAAAIAAAACAAAAEwAAAOMAAAD/AAAAIwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAfQAA
        AP8AAAD/AAAATAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAPQAAAPsAAAAlAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAABZAAAA/gAAAMgAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAbgAAACwAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAADkAAAD/AAAAUAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAALQAAAMoAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAbAAAAQwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/oABv/wA
        AB/QAABL9gAAFagAAAHSAABKAAAAIKQAAAUAAAAAQ4AA8hxwDgCAD/ABAIAIgAw8pABwSCMOiYkggwAI
        AAjQBEAFAIAiBaEIAIEGAAJFSACCobBBQltCAAKl/0Ki9/9AUv//RYr//0Cn//9L0v8=
</value>
  </data>
</root>